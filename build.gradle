buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.12.0"
    }
}

apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'groovy'

group = 'com.github.maiflai'
description = 'gradle-scalatest is a Gradle plugin for executing scalatest tests'
ext {
    websiteUrl = 'https://github.com/maiflai/gradle-scalatest'
    sourceUrl = 'https://github.com/maiflai/gradle-scalatest.git'
}

targetCompatibility = '1.6'

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    testCompile 'junit:junit:4.12'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    from "$buildDir/docs/groovydoc"
    archiveClassifier = 'groovydoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

test.dependsOn(jar)

artifacts {
    archives groovydocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

if (project.version == 'unspecified') {
    version = '0.1-SNAPSHOT'
    project.signArchives.enabled = false
}

task showVersion() { doLast { println(project.version) } }



def propOrDefault(String property) {
    if (project.hasProperty(property)) {
        return project.getProperty(property)
    } else {
        return ''
    }
}

pluginBundle {
    website = project.websiteUrl
    vcsUrl = project.sourceUrl
    description = project.description
    tags = ['testing', 'scala', 'scalatest']

    plugins {
        scalatestPlugin {
            id = 'com.github.maiflai.scalatest'
            displayName = 'Gradle ScalaTest plugin'
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: propOrDefault('sonatypeUsername'), password: propOrDefault('sonatypePassword'))
            }

            pom.project {
                name project.name
                description project.description
                url project.websiteUrl

                scm {
                    url "scm:git:${project.sourceUrl}"
                }

                licenses {
                    license {
                        name 'unlicense'
                        url 'http://unlicense.org'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'maiflai'
                    }
                }
            }
        }
    }
}
